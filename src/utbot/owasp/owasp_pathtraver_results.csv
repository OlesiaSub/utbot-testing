"filename","taint result","taint failure reason","is vulnerability","applicable for utbot","not applicability reason","TESTFILES_DIR","System","`while` cycle","`for` cycle","File","Files","FileInputStream","FileOutputStream","Cookie","Paths","Path","URLDecoder","StringBuilder","Enumeration","ESAPI","SeparateClassRequest","OWASP Utils",Base64
"BenchmarkTest00001","FALSE","usage of an array as a source return does not make the array tainted","TRUE",TRUE,"","TRUE","TRUE","FALSE","TRUE","TRUE","FALSE","TRUE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest00002","FALSE","usage of an array as a source return does not make the array tainted","TRUE",TRUE,"","TRUE","TRUE","FALSE","TRUE","TRUE","FALSE","FALSE","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest00011","TRUE","","TRUE","TRUE","","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","TRUE","TRUE","FALSE","FALSE","FALSE"
"BenchmarkTest00028","FALSE","data access from a tainted array does not make data tainted","TRUE","TRUE","","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest00040","TRUE","","TRUE","TRUE","","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","FALSE","FALSE"
"BenchmarkTest00045","FALSE","usage of an array as a source return does not make the array tainted","TRUE","TRUE","","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest00060","FALSE","usage of an array as a source return does not make the array tainted","TRUE",TRUE,"","TRUE","FALSE","FALSE","TRUE","TRUE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","TRUE"
"BenchmarkTest00061","FALSE","usage of an array as a source return does not make the array tainted","TRUE",TRUE,"","FALSE","FALSE","FALSE","TRUE","TRUE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE"
"BenchmarkTest00062","FALSE","usage of an array as a source return does not make the array tainted","TRUE",TRUE,"","TRUE","TRUE","FALSE","TRUE","TRUE","FALSE","TRUE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest00063","FALSE","usage of an array as a source return does not make the array tainted","FALSE",TRUE,"","TRUE","TRUE","FALSE","TRUE","TRUE","FALSE","TRUE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest00064","FALSE","usage of an array as a source return does not make the array tainted","FALSE",TRUE,"","TRUE","TRUE","FALSE","TRUE","TRUE","FALSE","FALSE","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest00065","FALSE","usage of an array as a source return does not make the array tainted","TRUE",TRUE,"","TRUE","TRUE","FALSE","TRUE","FALSE","TRUE","FALSE","FALSE","TRUE","TRUE","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","TRUE"
"BenchmarkTest00131","TRUE","does not rely on the actual value that is picked via charAt(idx) - overapproximation","FALSE","TRUE","","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE"
"BenchmarkTest00132","TRUE","does not rely on the actual value that is picked via charAt(idx) - overapproximation","FALSE","TRUE","","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest00133","TRUE","","TRUE","TRUE","","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest00134","FALSE","addition of tainted data into a list does not taint the list","FALSE","TRUE","","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","TRUE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest00135","TRUE","does not rely on the actual value that is picked via charAt(idx) - overapproximation","FALSE","TRUE","","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","TRUE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest00136","TRUE","does not rely on the actual value that is picked via charAt(idx) - overapproximation","FALSE","TRUE","","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest00137","FALSE","addition of tainted data to a map does not taint the map","FALSE","TRUE","","TRUE","TRUE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","TRUE","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest00215","TRUE","","TRUE","TRUE","","TRUE","FALSE","TRUE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest00216","TRUE","","TRUE","TRUE","","TRUE","FALSE","TRUE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest00217","FALSE","difficult dataflow","FALSE","FALSE","org.apache.commons.codec.binary.Base64 no class def + сам utbot падает на этом примере + reflection","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","TRUE","FALSE","TRUE","TRUE"
"BenchmarkTest00218","FALSE","URI creation with a tainted parameter does not taint the URI","TRUE","UNSURE","вроде работает с построением аргумента path на разных примерах","TRUE","TRUE","TRUE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest00219","TRUE","","TRUE","TRUE","","TRUE","TRUE","TRUE","FALSE","TRUE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest00220","FALSE","difficult dataflow","FALSE","FALSE","org.apache.commons.codec.binary.Base64 no class def + сам utbot падает на этом примере + reflection","TRUE","TRUE","TRUE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","TRUE","FALSE","TRUE","TRUE"
"BenchmarkTest00221","TRUE","does not rely on the actual value that is picked via charAt(idx) - overapproximation","FALSE","TRUE","","TRUE","TRUE","TRUE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest00222","TRUE","","TRUE","TRUE","","TRUE","TRUE","TRUE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest00261","FALSE","difficult dataflow","FALSE","FALSE","org.apache.commons.codec.binary.Base64 no class def + сам utbot падает на этом примере + reflection","TRUE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","TRUE","TRUE","FALSE","TRUE","TRUE"
"BenchmarkTest00262","TRUE","","TRUE","TRUE","","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","TRUE","TRUE","FALSE","FALSE","FALSE"
"BenchmarkTest00263","TRUE","does not rely on the actual value that is picked via charAt(idx) - overapproximation","FALSE","TRUE","","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","TRUE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest00264","TRUE","","TRUE","TRUE","","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","TRUE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest00265","FALSE","addition of tainted data into a list does not taint the list","FALSE","TRUE","","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","TRUE","FALSE","TRUE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest00359","TRUE","","TRUE","TRUE","","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE"
"BenchmarkTest00360","FALSE","string decoding operations","TRUE","UNSURE","org.apache.commons.codec.binary.Base64 no class def + сам utbot падает на этом примере","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","TRUE","TRUE"
"BenchmarkTest00361","TRUE","does not rely on the actual value that is picked via charAt(idx) - overapproximation","FALSE","TRUE","","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest00362","TRUE","","TRUE","TRUE","","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest00363","TRUE","","TRUE","TRUE","","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest00364","FALSE","addition of tainted data into a list does not taint the list","FALSE","TRUE","","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest00365","FALSE","addition of tainted data to a map does not taint the map","FALSE","TRUE","","TRUE","TRUE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","TRUE","TRUE","FALSE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest00366","TRUE","does not rely on the actual value that is picked via charAt(idx) - overapproximation","FALSE","TRUE","","TRUE","TRUE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","TRUE","TRUE","FALSE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest00452","FALSE","data access from a tainted array does not make data tainted","TRUE","UNSURE","org.apache.commons.codec.binary.Base64 no class def + сам utbot падает на этом примере","TRUE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","TRUE","TRUE"
"BenchmarkTest00453","FALSE","data access from a tainted array does not make data tainted","TRUE","UNSURE","org.apache.commons.codec.binary.Base64 no class def + сам utbot падает на этом примере","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","TRUE","TRUE"
"BenchmarkTest00454","FALSE","data access from a tainted array does not make data tainted","FALSE","TRUE","","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest00455","FALSE","data access from a tainted array does not make data tainted","TRUE","UNSURE","org.apache.commons.codec.binary.Base64 no class def + сам utbot падает на этом примере","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","TRUE","TRUE"
"BenchmarkTest00456","FALSE","data access from a tainted array does not make data tainted","TRUE","TRUE","","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest00457","FALSE","data access from a tainted array does not make data tainted","TRUE","TRUE","","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest00458","FALSE","data access from a tainted array does not make data tainted","FALSE","TRUE","","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest00459","FALSE","data access from a tainted array does not make data tainted","TRUE","TRUE","","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","TRUE","TRUE"
"BenchmarkTest00460","FALSE","data access from a tainted array does not make data tainted","FALSE","FALSE","org.apache.commons.codec.binary.Base64 no class def + сам utbot падает на этом примере + reflection","TRUE","TRUE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","TRUE","TRUE","FALSE","TRUE","FALSE","TRUE","FALSE","TRUE","TRUE"
"BenchmarkTest00525","FALSE","usage of an array as a source return does not make the array tainted","TRUE","TRUE","might fail because of cycle","TRUE","FALSE","TRUE","TRUE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest00526","FALSE","usage of an array as a source return does not make the array tainted","TRUE","TRUE","might fail because of cycle","FALSE","FALSE","TRUE","TRUE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","FALSE","FALSE","FALSE"
"BenchmarkTest00527","FALSE","usage of an array as a source return does not make the array tainted","TRUE","TRUE","might fail because of cycle","FALSE","FALSE","TRUE","TRUE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","FALSE","FALSE","FALSE"
"BenchmarkTest00528","FALSE","usage of an array as a source return does not make the array tainted","TRUE","TRUE","might fail because of cycle","TRUE","TRUE","TRUE","TRUE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest00529","FALSE","usage of an array as a source return does not make the array tainted","TRUE","TRUE","might fail because of cycle","TRUE","TRUE","TRUE","TRUE","TRUE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest00619","FALSE","addition of tainted data into a list does not taint the list","TRUE","TRUE","","TRUE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","TRUE","FALSE"
"BenchmarkTest00620","FALSE","addition of tainted data into a list does not taint the list","FALSE","TRUE","","TRUE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","TRUE","FALSE"
"BenchmarkTest00621","FALSE","difficult dataflow","FALSE","FALSE","org.apache.commons.codec.binary.Base64 no class def + сам utbot падает на этом примере + reflection","TRUE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","TRUE","TRUE","TRUE","TRUE"
"BenchmarkTest00622","TRUE","does not rely on the actual value that is picked via charAt(idx) - overapproximation","FALSE","TRUE","","TRUE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","TRUE","FALSE"
"BenchmarkTest00623","FALSE","string decoding operations","TRUE","UNSURE","org.apache.commons.codec.binary.Base64 no class def + сам utbot падает на этом примере","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","FALSE","TRUE"
"BenchmarkTest00624","TRUE","","TRUE","FALSE","reflection","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","TRUE","FALSE"
"BenchmarkTest00625","TRUE","does not rely on actual results of int calculations - overapproximation","FALSE","TRUE","","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","TRUE","FALSE"
"BenchmarkTest00626","FALSE","addition of tainted data into a list does not taint the list","FALSE","TRUE","","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","TRUE","FALSE"
"BenchmarkTest00627","FALSE","string decoding operations","TRUE","UNSURE","org.apache.commons.codec.binary.Base64 no class def + сам utbot падает на этом примере","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","TRUE","TRUE"
"BenchmarkTest00628","FALSE","difficult dataflow","FALSE","FALSE","reflection","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","TRUE","TRUE","TRUE","TRUE"
"BenchmarkTest00629","TRUE","","TRUE","TRUE","","TRUE","TRUE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","TRUE","TRUE","FALSE","FALSE","FALSE","TRUE","TRUE","TRUE","FALSE"
"BenchmarkTest00696","FALSE","usage of an array as a source return does not make the array tainted","TRUE","TRUE","","TRUE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest00697","FALSE","usage of an array as a source return does not make the array tainted","TRUE","UNSURE","org.apache.commons.codec.binary.Base64 no class def + сам utbot падает на этом примере","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE"
"BenchmarkTest00698","FALSE","usage of an array as a source return does not make the array tainted","TRUE","FALSE","reflection","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE"
"BenchmarkTest00699","FALSE","usage of an array as a source return does not make the array tainted","FALSE","TRUE","","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE"
"BenchmarkTest00700","FALSE","usage of an array as a source return does not make the array tainted","TRUE","UNSURE","org.apache.commons.codec.binary.Base64 no class def + сам utbot падает на этом примере","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","TRUE","TRUE"
"BenchmarkTest00783","FALSE","addition of tainted data to a map does not taint the map","TRUE","FALSE","difficult string manipulations","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest00784","TRUE","does not rely on the actual value that is picked via charAt(idx) - overapproximation","FALSE","UNSURE","utbot не генерит сюда тест, no executable traces found, кажется из-за indexOf","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest00785","FALSE","addition of tainted data to a map does not taint the map","TRUE","UNSURE","utbot не генерит сюда тест, no executable traces found, кажется из-за indexOf","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest00786","FALSE","addition of tainted data to a map does not taint the map","FALSE","UNSURE","utbot не генерит сюда тест, no executable traces found, кажется из-за indexOf","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest00787","FALSE","string decoding operations","TRUE","UNSURE","utbot не генерит сюда тест, no executable traces found, кажется из-за indexOf","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","TRUE"
"BenchmarkTest00788","TRUE","","TRUE","UNSURE","utbot не генерит сюда тест, no executable traces found, кажется из-за indexOf","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest00862","TRUE","does not rely on actual results of int calculations - overapproximation","FALSE","TRUE","","TRUE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","TRUE","FALSE"
"BenchmarkTest00863","TRUE","?","FALSE","FALSE","reflection","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","FALSE","FALSE"
"BenchmarkTest00864","FALSE","addition of tainted data into a list does not taint the list","FALSE","TRUE","","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","FALSE","FALSE"
"BenchmarkTest00865","FALSE","addition of tainted data into a list does not taint the list","FALSE","TRUE","","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","TRUE","FALSE"
"BenchmarkTest00866","TRUE","?","FALSE","FALSE","reflection","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","TRUE","FALSE"
"BenchmarkTest00867","FALSE","addition of tainted data into a list does not taint the list","FALSE","TRUE","","TRUE","TRUE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","TRUE","TRUE","FALSE","FALSE","FALSE","TRUE","TRUE","TRUE","FALSE"
"BenchmarkTest00949","FALSE","usage of an array as a source return does not make the array tainted","TRUE",TRUE,"","TRUE","FALSE","FALSE","TRUE","TRUE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest00950","FALSE","usage of an array as a source return does not make the array tainted","TRUE",TRUE,"","FALSE","FALSE","FALSE","TRUE","TRUE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE"
"BenchmarkTest00951","FALSE","usage of an array as a source return does not make the array tainted","FALSE",TRUE,"","TRUE","TRUE","FALSE","TRUE","TRUE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest00952","FALSE","usage of an array as a source return does not make the array tainted","TRUE",TRUE,"","TRUE","TRUE","FALSE","TRUE","TRUE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest00953","FALSE","usage of an array as a source return does not make the array tainted","TRUE",TRUE,"","TRUE","TRUE","FALSE","TRUE","TRUE","FALSE","TRUE","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest00954","FALSE","usage of an array as a source return does not make the array tainted","FALSE",TRUE,"","TRUE","TRUE","FALSE","TRUE","TRUE","FALSE","TRUE","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest00955","FALSE","usage of an array as a source return does not make the array tainted","FALSE",TRUE,"","TRUE","TRUE","FALSE","TRUE","TRUE","FALSE","TRUE","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest00956","FALSE","usage of an array as a source return does not make the array tainted","TRUE",TRUE,"","TRUE","TRUE","FALSE","TRUE","TRUE","FALSE","TRUE","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest00957","FALSE","usage of an array as a source return does not make the array tainted","FALSE",TRUE,"","TRUE","TRUE","FALSE","TRUE","FALSE","TRUE","FALSE","FALSE","TRUE","TRUE","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest00958","FALSE","usage of an array as a source return does not make the array tainted","FALSE",TRUE,"","TRUE","TRUE","FALSE","TRUE","FALSE","TRUE","FALSE","FALSE","TRUE","TRUE","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest01025","TRUE","","TRUE","FALSE","reflection","TRUE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest01026","TRUE","difficult dataflow?","FALSE","FALSE","difficult string manipulation + org.apache.commons.codec.binary.Base64 no class def + сам utbot падает на этом примере + reflection","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","FALSE","TRUE","FALSE","FALSE","TRUE"
"BenchmarkTest01027","TRUE","does not rely on actual results of int calculations - overapproximation","FALSE","TRUE","","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE"
"BenchmarkTest01028","FALSE","addition of tainted data into a list does not taint the list","FALSE","TRUE","","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest01029","FALSE","URI creation with a tainted parameter does not taint the URI","TRUE","FALSE","reflection","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest01030","FALSE","URI creation with a tainted parameter does not taint the URI","FALSE","TRUE","","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest01031","FALSE","addition of tainted data into a list does not taint the list","FALSE","TRUE","","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest01032","TRUE","","TRUE","TRUE","","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest01033","TRUE","","TRUE","FALSE","reflection","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest01034","TRUE","","TRUE","UNSURE","org.apache.commons.codec.binary.Base64 no class def + сам utbot падает на этом примере","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","TRUE"
"BenchmarkTest01035","TRUE","does not rely on actual results of int calculations - overapproximation","FALSE","TRUE","","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest01036","FALSE","addition of tainted data to a map does not taint the map","FALSE","TRUE","","TRUE","TRUE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","TRUE","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest01109","TRUE","?","FALSE","FALSE","reflection + difficult string manipulations","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","TRUE","FALSE","TRUE","TRUE"
"BenchmarkTest01110","FALSE","URI creation with a tainted parameter does not taint the URI","FALSE","TRUE","","TRUE","TRUE","TRUE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest01111","TRUE","","TRUE","TRUE","","TRUE","TRUE","TRUE","FALSE","TRUE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest01112","TRUE","","TRUE","TRUE","","TRUE","TRUE","TRUE","FALSE","TRUE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest01113","FALSE","addition of tainted data to a map does not taint the map","FALSE","TRUE","","TRUE","TRUE","TRUE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest01114","TRUE","?","FALSE","FALSE","reflection + difficult string manipulations","TRUE","TRUE","TRUE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","TRUE","FALSE","TRUE","TRUE"
"BenchmarkTest01115","TRUE","?","FALSE","FALSE","reflection + difficult string manipulations","TRUE","TRUE","TRUE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","TRUE","FALSE","TRUE","TRUE"
"BenchmarkTest01116","FALSE","addition of tainted data into a list does not taint the list","TRUE","TRUE","","TRUE","TRUE","TRUE","FALSE","TRUE","FALSE","TRUE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest01117","TRUE","","TRUE","UNSURE","org.apache.commons.codec.binary.Base64 no class def + сам utbot падает на этом примере","TRUE","TRUE","TRUE","FALSE","TRUE","FALSE","TRUE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","FALSE","TRUE","TRUE"
"BenchmarkTest01118","FALSE","addition of tainted data to a map does not taint the map","FALSE","TRUE","","TRUE","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","TRUE","TRUE","FALSE","FALSE","TRUE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest01155","FALSE","addition of tainted data into a list does not taint the list","TRUE","TRUE","","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","TRUE","TRUE","FALSE","FALSE","FALSE"
"BenchmarkTest01156","FALSE","addition of tainted data to a map does not taint the map","TRUE","TRUE","","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","TRUE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest01157","FALSE","URI creation with a tainted parameter does not taint the URI","TRUE","TRUE","","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","TRUE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest01158","FALSE","addition of tainted data into a list does not taint the list","FALSE","TRUE","","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","TRUE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest01159","TRUE","?","FALSE","FALSE","reflection + difficult string manipulations","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","TRUE","TRUE","FALSE","TRUE","TRUE"
"BenchmarkTest01160","TRUE","does not rely on actual results of int calculations - overapproximation","FALSE","TRUE","","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","TRUE","FALSE","TRUE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest01161","FALSE","addition of tainted data into a list does not taint the list","TRUE","TRUE","","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","TRUE","FALSE","TRUE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest01231","FALSE","addition of tainted data to a map does not taint the map","TRUE","TRUE","","TRUE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest01232","TRUE","","TRUE","FALSE","reflection","TRUE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest01233","TRUE","does not rely on the actual value that is picked via charAt(idx) - overapproximation","FALSE","TRUE","","TRUE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest01234","TRUE","","TRUE","FALSE","reflection","TRUE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest01235","FALSE","addition of tainted data to a map does not taint the map","TRUE","TRUE","","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest01236","FALSE","URI creation with a tainted parameter does not taint the URI","TRUE","FALSE","reflection","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest01237","FALSE","URI creation with a tainted parameter does not taint the URI","FALSE","TRUE","","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest01238","FALSE","addition of tainted data into a list does not taint the list","TRUE","TRUE","","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest01239","FALSE","addition of tainted data into a list does not taint the list","FALSE","TRUE","","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest01240","FALSE","addition of tainted data into a list does not taint the list","FALSE","TRUE","","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest01328","FALSE","data access from a tainted array does not make data tainted","FALSE","FALSE","org.apache.commons.codec.binary.Base64 no class def + сам utbot падает на этом примере + reflection","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE","TRUE","TRUE"
"BenchmarkTest01329","FALSE","data access from a tainted array does not make data tainted","TRUE","TRUE","","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest01330","FALSE","data access from a tainted array does not make data tainted","TRUE","TRUE","","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest01331","FALSE","data access from a tainted array does not make data tainted","FALSE","TRUE","","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest01403","FALSE","usage of an array as a source return does not make the array tainted","TRUE","FALSE","reflection","TRUE","FALSE","TRUE","TRUE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest01404","FALSE","usage of an array as a source return does not make the array tainted","FALSE","FALSE","org.apache.commons.codec.binary.Base64 no class def + сам utbot падает на этом примере + reflection","FALSE","FALSE","TRUE","TRUE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","TRUE","FALSE","FALSE","TRUE"
"BenchmarkTest01405","FALSE","usage of an array as a source return does not make the array tainted","TRUE","TRUE","","TRUE","TRUE","TRUE","TRUE","TRUE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest01406","FALSE","usage of an array as a source return does not make the array tainted","FALSE","TRUE","","TRUE","TRUE","TRUE","TRUE","TRUE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest01407","FALSE","usage of an array as a source return does not make the array tainted","FALSE","TRUE","","TRUE","TRUE","TRUE","TRUE","TRUE","FALSE","TRUE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest01408","FALSE","usage of an array as a source return does not make the array tainted","TRUE","FALSE","reflection","TRUE","TRUE","TRUE","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest01409","FALSE","usage of an array as a source return does not make the array tainted","FALSE","TRUE","","TRUE","TRUE","TRUE","TRUE","FALSE","TRUE","FALSE","FALSE","FALSE","TRUE","TRUE","FALSE","FALSE","TRUE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest01493","FALSE","addition of tainted data to a map does not taint the map","FALSE","TRUE","","TRUE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","TRUE","FALSE"
"BenchmarkTest01494","TRUE","","TRUE","TRUE","","TRUE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","TRUE","FALSE"
"BenchmarkTest01495","FALSE","URI creation with a tainted parameter does not taint the URI","TRUE","TRUE","","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","TRUE","FALSE"
"BenchmarkTest01496","TRUE","","TRUE","TRUE","","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","TRUE","FALSE"
"BenchmarkTest01497","FALSE","addition of tainted data into a list does not taint the list","TRUE","TRUE","","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","TRUE","FALSE"
"BenchmarkTest01498","TRUE","","TRUE","UNSURE","org.apache.commons.codec.binary.Base64 no class def + сам utbot падает на этом примере","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","TRUE","TRUE"
"BenchmarkTest01499","TRUE","does not rely on actual results of int calculations - overapproximation","FALSE","TRUE","","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","TRUE","FALSE"
"BenchmarkTest01500","FALSE","addition of tainted data to a map does not taint the map","TRUE","TRUE","","TRUE","TRUE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","TRUE","TRUE","FALSE","FALSE","FALSE","TRUE","TRUE","TRUE","FALSE"
"BenchmarkTest01570","FALSE","usage of an array as a source return does not make the array tainted","FALSE","TRUE","","TRUE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest01571","FALSE","usage of an array as a source return does not make the array tainted","TRUE","TRUE","","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE"
"BenchmarkTest01572","FALSE","usage of an array as a source return does not make the array tainted","TRUE","FALSE","reflection","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest01573","FALSE","usage of an array as a source return does not make the array tainted","FALSE","TRUE","","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest01574","FALSE","usage of an array as a source return does not make the array tainted","FALSE","TRUE","","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest01642","TRUE","","TRUE","FALSE","difficult string manipulations + reflection","TRUE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest01643","FALSE","URI creation with a tainted parameter does not taint the URI","TRUE","FALSE","difficult string manipulations","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest01644","TRUE","does not rely on actual results of int calculations - overapproximation","FALSE","FALSE","difficult string manipulations","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest01645","TRUE","","TRUE","FALSE","difficult string manipulations","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest01646","FALSE","addition of tainted data to a map does not taint the map","FALSE","FALSE","difficult string manipulations","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest01647","TRUE","","TRUE","FALSE","difficult string manipulations","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest01744","TRUE","?","FALSE","FALSE","difficult string manipulations + reflection","TRUE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","TRUE","TRUE","TRUE","TRUE"
"BenchmarkTest01745","TRUE","??? I don't understand why it is not a vulnerability","FALSE","TRUE","","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","FALSE","FALSE"
"BenchmarkTest01746","FALSE","URI creation with a tainted parameter does not taint the URI","FALSE","TRUE","","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","TRUE","FALSE"
"BenchmarkTest01747","FALSE","URI creation with a tainted parameter does not taint the URI","FALSE","TRUE","","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","TRUE","FALSE"
"BenchmarkTest01748","FALSE","addition of tainted data into a list does not taint the list","FALSE","TRUE","","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","TRUE","FALSE"
"BenchmarkTest01749","TRUE","does not rely on actual results of int calculations - overapproximation","FALSE","TRUE","","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","TRUE","FALSE"
"BenchmarkTest01750","TRUE","?","FALSE","FALSE","reflection","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","TRUE","FALSE"
"BenchmarkTest01751","TRUE","does not rely on actual results of int calculations - overapproximation","FALSE","TRUE","","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","TRUE","FALSE"
"BenchmarkTest01752","FALSE","addition of tainted data to a map does not taint the map","FALSE","TRUE","","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","TRUE","FALSE"
"BenchmarkTest01833","FALSE","usage of an array as a source return does not make the array tainted","TRUE",TRUE,"","TRUE","FALSE","FALSE","TRUE","TRUE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest01834","FALSE","usage of an array as a source return does not make the array tainted","FALSE",TRUE,"","TRUE","FALSE","FALSE","TRUE","TRUE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest01835","FALSE","usage of an array as a source return does not make the array tainted","TRUE",TRUE,"","TRUE","FALSE","FALSE","TRUE","TRUE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest01836","FALSE","usage of an array as a source return does not make the array tainted","TRUE",TRUE,"","TRUE","TRUE","FALSE","TRUE","TRUE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest01837","FALSE","usage of an array as a source return does not make the array tainted","FALSE",TRUE,"","TRUE","TRUE","FALSE","TRUE","TRUE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest01838","FALSE","usage of an array as a source return does not make the array tainted","FALSE",TRUE,"","TRUE","TRUE","FALSE","TRUE","TRUE","FALSE","TRUE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest01839","FALSE","usage of an array as a source return does not make the array tainted","TRUE",TRUE,"","TRUE","TRUE","FALSE","TRUE","TRUE","FALSE","FALSE","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest01840","FALSE","usage of an array as a source return does not make the array tainted","TRUE",TRUE,"","TRUE","TRUE","FALSE","TRUE","TRUE","FALSE","FALSE","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest01841","FALSE","usage of an array as a source return does not make the array tainted","FALSE",TRUE,"","TRUE","TRUE","FALSE","TRUE","TRUE","FALSE","TRUE","TRUE","TRUE","FALSE","FALSE","TRUE","TRUE","FALSE","TRUE","FALSE","TRUE","TRUE"
"BenchmarkTest01904","FALSE","addition of tainted data to a map does not taint the map","TRUE","TRUE","","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE"
"BenchmarkTest01905","FALSE","addition of tainted data to a map does not taint the map","FALSE","TRUE","","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest01906","FALSE","addition of tainted data into a list does not taint the list","TRUE","TRUE","","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest01907","TRUE","","TRUE","TRUE","","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest01908","FALSE","addition of tainted data into a list does not taint the list","TRUE","TRUE","","TRUE","TRUE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","TRUE","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest01983","TRUE","","TRUE","TRUE","","TRUE","FALSE","TRUE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest01984","FALSE","addition of tainted data to a map does not taint the map","FALSE","TRUE","","TRUE","FALSE","TRUE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest01985","FALSE","string decoding operations","TRUE","UNSURE","org.apache.commons.codec.binary.Base64 no class def + сам utbot падает на этом примере","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","FALSE","TRUE","TRUE"
"BenchmarkTest01986","FALSE","addition of tainted data to a map does not taint the map","FALSE","TRUE","","TRUE","TRUE","TRUE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest01987","FALSE","URI creation with a tainted parameter does not taint the URI","TRUE","TRUE","","TRUE","TRUE","TRUE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest01988","FALSE","string decoding operations","TRUE","UNSURE","org.apache.commons.codec.binary.Base64 no class def + сам utbot падает на этом примере","TRUE","TRUE","TRUE","FALSE","TRUE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","FALSE","TRUE","TRUE"
"BenchmarkTest01989","TRUE","","TRUE","TRUE","","TRUE","TRUE","TRUE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest01990","TRUE","does not rely on the actual value that is picked via charAt(idx) - overapproximation","FALSE","TRUE","","TRUE","TRUE","TRUE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest01991","FALSE","difficult dataflow","FALSE","FALSE","org.apache.commons.codec.binary.Base64 no class def + сам utbot падает на этом примере + reflection","TRUE","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","TRUE","TRUE","FALSE","TRUE","TRUE","TRUE","FALSE","TRUE","TRUE"
"BenchmarkTest02026","FALSE","addition of tainted data into a list does not taint the list","FALSE","TRUE","","TRUE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","TRUE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest02027","TRUE","","TRUE","TRUE","","TRUE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","TRUE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest02028","TRUE","does not rely on the actual value that is picked via charAt(idx) - overapproximation","FALSE","TRUE","","TRUE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","TRUE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest02029","FALSE","addition of tainted data to a map does not taint the map","FALSE","TRUE","","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","TRUE","TRUE","FALSE","FALSE","FALSE"
"BenchmarkTest02030","FALSE","difficult dataflow","FALSE","FALSE","org.apache.commons.codec.binary.Base64 no class def + сам utbot падает на этом примере + reflection","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","TRUE","TRUE","FALSE","TRUE","TRUE"
"BenchmarkTest02031","TRUE","does not rely on actual results of int calculations - overapproximation","FALSE","TRUE","","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","TRUE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest02032","TRUE","","TRUE","TRUE","","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","TRUE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest02033","TRUE","does not rely on the actual value that is picked via charAt(idx) - overapproximation","FALSE","TRUE","","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","TRUE","FALSE","TRUE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest02034","TRUE","","TRUE","TRUE","","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","TRUE","FALSE","FALSE","FALSE","TRUE","FALSE","TRUE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest02035","TRUE","does not rely on actual results of int calculations - overapproximation","FALSE","TRUE","","TRUE","TRUE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","TRUE","TRUE","TRUE","FALSE","TRUE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest02105","FALSE","addition of tainted data into a list does not taint the list","TRUE","TRUE","","TRUE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest02106","FALSE","string decoding operations","TRUE","UNSURE","org.apache.commons.codec.binary.Base64 no class def + сам utbot падает на этом примере","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE"
"BenchmarkTest02107","TRUE","does not rely on actual results of int calculations - overapproximation","FALSE","TRUE","","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE"
"BenchmarkTest02108","FALSE","addition of tainted data to a map does not taint the map","FALSE","TRUE","","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest02109","FALSE","string decoding operations","TRUE","UNSURE","org.apache.commons.codec.binary.Base64 no class def + сам utbot падает на этом примере","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","TRUE","TRUE"
"BenchmarkTest02110","FALSE","addition of tainted data into a list does not taint the list","FALSE","TRUE","","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest02111","FALSE","addition of tainted data into a list does not taint the list","FALSE","TRUE","","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest02112","TRUE","","TRUE","TRUE","","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest02113","TRUE","","TRUE","TRUE","","TRUE","TRUE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","TRUE","TRUE","FALSE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest02197","FALSE","data access from a tainted array does not make data tainted","TRUE","TRUE","","TRUE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest02198","FALSE","data access from a tainted array does not make data tainted","TRUE","TRUE","","TRUE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest02199","FALSE","data access from a tainted array does not make data tainted","TRUE","TRUE","","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE"
"BenchmarkTest02200","FALSE","data access from a tainted array does not make data tainted","FALSE","TRUE","","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE"
"BenchmarkTest02201","FALSE","data access from a tainted array does not make data tainted","FALSE","TRUE","","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest02202","FALSE","data access from a tainted array does not make data tainted","FALSE","TRUE","","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest02203","FALSE","data access from a tainted array does not make data tainted","FALSE","FALSE","org.apache.commons.codec.binary.Base64 no class def + сам utbot падает на этом примере + reflection","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE","TRUE","TRUE"
"BenchmarkTest02204","FALSE","data access from a tainted array does not make data tainted","FALSE","TRUE","","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest02205","FALSE","data access from a tainted array does not make data tainted","TRUE","TRUE","","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest02206","FALSE","data access from a tainted array does not make data tainted","FALSE","TRUE","","TRUE","TRUE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","TRUE","TRUE","FALSE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest02207","FALSE","data access from a tainted array does not make data tainted","FALSE","TRUE","","TRUE","TRUE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","TRUE","TRUE","FALSE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest02300","FALSE","usage of an array as a source return does not make the array tainted","FALSE","FALSE","org.apache.commons.codec.binary.Base64 no class def + сам utbot падает на этом примере + reflection","TRUE","FALSE","TRUE","TRUE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","TRUE","FALSE","TRUE","TRUE"
"BenchmarkTest02301","FALSE","usage of an array as a source return does not make the array tainted","FALSE","TRUE","","FALSE","FALSE","TRUE","TRUE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","FALSE","FALSE","FALSE"
"BenchmarkTest02302","FALSE","usage of an array as a source return does not make the array tainted","TRUE","FALSE","reflection","FALSE","FALSE","TRUE","TRUE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","FALSE","FALSE","FALSE"
"BenchmarkTest02303","FALSE","usage of an array as a source return does not make the array tainted","TRUE","TRUE","","TRUE","TRUE","TRUE","TRUE","TRUE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest02304","FALSE","usage of an array as a source return does not make the array tainted","TRUE","TRUE","","TRUE","TRUE","TRUE","TRUE","TRUE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest02377","TRUE","","TRUE","TRUE","","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","FALSE","FALSE"
"BenchmarkTest02378","FALSE","URI creation with a tainted parameter does not taint the URI","TRUE","FALSE","reflection","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","TRUE","FALSE"
"BenchmarkTest02379","FALSE","addition of tainted data into a list does not taint the list","FALSE","TRUE","","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","TRUE","FALSE"
"BenchmarkTest02380","FALSE","difficult dataflow","FALSE","FALSE","org.apache.commons.codec.binary.Base64 no class def + сам utbot падает на этом примере + reflection","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","TRUE","TRUE","TRUE","TRUE"
"BenchmarkTest02381","FALSE","addition of tainted data to a map does not taint the map","FALSE","TRUE","","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","TRUE","FALSE"
"BenchmarkTest02382","TRUE","does not rely on actual results of int calculations - overapproximation","FALSE","TRUE","","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","TRUE","FALSE"
"BenchmarkTest02383","FALSE","addition of tainted data to a map does not taint the map","TRUE","TRUE","","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","TRUE","FALSE"
"BenchmarkTest02462","FALSE","usage of an array as a source return does not make the array tainted","FALSE","TRUE","","TRUE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest02463","FALSE","usage of an array as a source return does not make the array tainted","TRUE","TRUE","","TRUE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest02464","FALSE","usage of an array as a source return does not make the array tainted","FALSE","TRUE","","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE"
"BenchmarkTest02465","FALSE","usage of an array as a source return does not make the array tainted","TRUE","TRUE","","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest02466","FALSE","usage of an array as a source return does not make the array tainted","TRUE","TRUE","","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest02467","FALSE","usage of an array as a source return does not make the array tainted","FALSE","FALSE","org.apache.commons.codec.binary.Base64 no class def + сам utbot падает на этом примере + reflection","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE","TRUE","TRUE"
"BenchmarkTest02468","FALSE","usage of an array as a source return does not make the array tainted","FALSE","TRUE","","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest02469","FALSE","usage of an array as a source return does not make the array tainted","TRUE","UNSURE","org.apache.commons.codec.binary.Base64 no class def + сам utbot падает на этом примере","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","TRUE","TRUE"
"BenchmarkTest02470","FALSE","usage of an array as a source return does not make the array tainted","FALSE","TRUE","","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest02471","FALSE","usage of an array as a source return does not make the array tainted","FALSE","TRUE","","TRUE","TRUE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","TRUE","TRUE","FALSE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest02554","TRUE","does not rely on actual results of int calculations - overapproximation","FALSE","FALSE","difficult string manipulations","TRUE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest02555","FALSE","string decoding operations","TRUE","FALSE","difficult string manipulations","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE"
"BenchmarkTest02556","TRUE","","TRUE","FALSE","difficult string manipulations","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE"
"BenchmarkTest02557","FALSE","addition of tainted data into a list does not taint the list","FALSE","FALSE","difficult string manipulations","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE"
"BenchmarkTest02558","TRUE","does not rely on actual results of int calculations - overapproximation","FALSE","FALSE","difficult string manipulations","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE"
"BenchmarkTest02559","FALSE","URI creation with a tainted parameter does not taint the URI","TRUE","FALSE","difficult string manipulations","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest02560","TRUE","","TRUE","FALSE","difficult string manipulations","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest02561","FALSE","addition of tainted data into a list does not taint the list","TRUE","FALSE","difficult string manipulations","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest02562","TRUE","","TRUE","FALSE","difficult string manipulations","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest02563","FALSE","difficult dataflow","FALSE","FALSE","difficult string manipulations","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","TRUE","TRUE","FALSE","TRUE","FALSE","TRUE","TRUE"
"BenchmarkTest02564","TRUE","","TRUE","FALSE","difficult string manipulations","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest02565","FALSE","string decoding operations","TRUE","FALSE","difficult string manipulations","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","TRUE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","TRUE"
"BenchmarkTest02566","TRUE","does not rely on the actual value that is picked via charAt(idx) - overapproximation","FALSE","FALSE","difficult string manipulations","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","TRUE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest02567","TRUE","","TRUE","FALSE","difficult string manipulations","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest02568","TRUE","does not rely on the actual value that is picked via charAt(idx) - overapproximation","FALSE","FALSE","difficult string manipulations","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest02569","TRUE","","TRUE","FALSE","difficult string manipulations","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest02570","FALSE","addition of tainted data into a list does not taint the list","FALSE","FALSE","difficult string manipulations","TRUE","TRUE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","TRUE","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE"
"BenchmarkTest02664","TRUE","does not rely on the actual value that is picked via charAt(idx) - overapproximation","FALSE","TRUE","","FALSE","FALSE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","FALSE","FALSE"
"BenchmarkTest02665","TRUE","does not rely on the actual value that is picked via charAt(idx) - overapproximation","FALSE","TRUE","","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","TRUE","FALSE"
"BenchmarkTest02666","FALSE","addition of tainted data into a list does not taint the list","FALSE","TRUE","","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","TRUE","FALSE"
"BenchmarkTest02667","TRUE","does not rely on actual results of int calculations - overapproximation","FALSE","TRUE","","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","TRUE","FALSE"
"BenchmarkTest02668","FALSE","addition of tainted data to a map does not taint the map","FALSE","TRUE","","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","TRUE","FALSE"
"BenchmarkTest02669","FALSE","addition of tainted data into a list does not taint the list","FALSE","TRUE","","TRUE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","TRUE","FALSE","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","TRUE","FALSE"
